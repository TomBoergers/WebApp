version: "3"
services:
  angular:
    container_name: angular
    build: ./frontend
    depends_on:
      - "spring-boot"
    ports:
      - "80:4200"
    image: projectf/frontend:frontend
    restart: unless-stopped
    environment:
      API_URL: http://127.0.0.1:8080/
    networks:
      - docker-spring-angular

  spring-boot:
    container_name: spring-boot
    build: ./backend
    depends_on:
      - "db"
    ports:
      - "8080:8080"
    image: projectf/backend:backend
    environment:
      spring.datasource.url: jdbc:mysql://db:3306/dockerSpringAngular
      spring.datasource.username: test
      spring.datasource.password: test
    restart: unless-stopped
    networks:
      - docker-spring-angular

  db:
    container_name: db
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: dockerSpringAngular
      MYSQL_USER: test
      MYSQL_PASSWORD: test
    ports:
      - "3306:3306"
    volumes:
      - ./persisted_db:/var/lib/mysql
    restart: unless-stopped
    cap_add:
      - SYS_NICE
    networks:
      - docker-spring-angular

networks:
  docker-spring-angular:
